---
swagger: "2.0"
info:
  description: "OpenTripPlanner Middleware API"
  version: "Local Build"
  title: "OTP Middleware"
  termsOfService: ""
  contact:
    name: "IBI Group"
    url: "https://github.com/ibi-group"
    email: "transitdatasupport@ibigroup.com"
  license:
    name: "MIT License"
    url: "https://opensource.org/licenses/MIT"
host: null
basePath: "/null"
tags:
  - name: "api/secure/monitoredtrip"
    description: "Interface for querying and managing 'MonitoredTrip' entities."
  - name: "api/secure/triprequests"
    description: "Interface for retrieving trip requests."
  - name: "api/secure/user"
    description: "Interface for querying and managing 'OtpUser' entities."
  - name: "otp"
    description: "Proxy interface for OTP endpoints. Refer to <a href='http://otp-docs.ibi-transit.com/api/index.html'>OTP's\
    \ API documentation</a> for OTP's supported API resources."
  - name: "pelias"
    description: "Proxy interface for Pelias geocoder. Refer to <a href='https://github.com/pelias/documentation/#endpoint-descriptions'>Pelias\
    \ Geocoder Documentation</a> for API resources supported by Pelias Geocoder."
schemes:
  - "https"
paths:
  /api/secure/monitoredtrip:
    get:
      tags:
        - "api/secure/monitoredtrip"
      description: "Gets a list of all 'MonitoredTrip' entities."
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MonitoredTrip"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
    post:
      tags:
        - "api/secure/monitoredtrip"
      description: "Creates a 'MonitoredTrip' entity."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          description: "Body object description"
          required: true
          schema:
            $ref: "#/definitions/MonitoredTrip"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MonitoredTrip"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/monitoredtrip/{id}:
    get:
      tags:
        - "api/secure/monitoredtrip"
      description: "Returns the 'MonitoredTrip' entity with the specified id, or 404\
        \ if not found."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the entity to search."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MonitoredTrip"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
    put:
      tags:
        - "api/secure/monitoredtrip"
      description: "Updates and returns the 'MonitoredTrip' entity with the specified\
        \ id, or 404 if not found."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the entity to update."
          required: true
          type: "string"
        - in: "body"
          description: "Body object description"
          required: true
          schema:
            $ref: "#/definitions/MonitoredTrip"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MonitoredTrip"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
    delete:
      tags:
        - "api/secure/monitoredtrip"
      description: "Deletes the 'MonitoredTrip' entity with the specified id if it\
        \ exists."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the entity to delete."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MonitoredTrip"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/triprequests:
    get:
      tags:
        - "api/secure/triprequests"
      description: "Gets a list of all trip requests for a user."
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "query"
          description: "The OTP user for which to retrieve trip requests."
          required: false
          type: "string"
        - name: "limit"
          in: "query"
          description: "If specified, the maximum number of trip requests to return,\
          \ starting from the most recent."
          required: false
          type: "string"
          default: "10"
        - name: "fromDate"
          in: "query"
          description: "If specified, the earliest date (format yyyy-MM-dd) for which\
          \ trip requests are retrieved."
          required: false
          type: "string"
          default: "The current date"
          pattern: "yyyy-MM-dd"
        - name: "toDate"
          in: "query"
          description: "If specified, the latest date (format yyyy-MM-dd) for which\
          \ usage logs are retrieved."
          required: false
          type: "string"
          default: "The current date"
          pattern: "yyyy-MM-dd"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TripRequest"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/user:
    get:
      tags:
        - "api/secure/user"
      description: "Gets a list of all 'OtpUser' entities."
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OtpUser"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
    post:
      tags:
        - "api/secure/user"
      description: "Creates a 'OtpUser' entity."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          description: "Body object description"
          required: true
          schema:
            $ref: "#/definitions/OtpUser"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OtpUser"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/user/fromtoken:
    get:
      tags:
        - "api/secure/user"
      description: "Retrieves an OtpUser entity using an Auth0 access token passed\
        \ in an Authorization header."
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OtpUser"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/user/verification-email:
    get:
      tags:
        - "api/secure/user"
      description: "Triggers a job to resend the Auth0 verification email."
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Job"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/user/{id}:
    get:
      tags:
        - "api/secure/user"
      description: "Returns the 'OtpUser' entity with the specified id, or 404 if\
        \ not found."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the entity to search."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OtpUser"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
    put:
      tags:
        - "api/secure/user"
      description: "Updates and returns the 'OtpUser' entity with the specified id,\
        \ or 404 if not found."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the entity to update."
          required: true
          type: "string"
        - in: "body"
          description: "Body object description"
          required: true
          schema:
            $ref: "#/definitions/OtpUser"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OtpUser"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
    delete:
      tags:
        - "api/secure/user"
      description: "Deletes the 'OtpUser' entity with the specified id if it exists."
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the entity to delete."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OtpUser"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/user/{id}/verify_sms:
    get:
      tags:
        - "api/secure/user"
      description: "Request an SMS verification to be sent to an OtpUser's phone number."
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the OtpUser."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/VerificationResult"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /api/secure/user/{id}/verify_sms/{code}:
    post:
      tags:
        - "api/secure/user"
      description: "Verify an OtpUser's phone number with a verification code."
      parameters:
        - name: "id"
          in: "path"
          description: "The id of the OtpUser."
          required: true
          type: "string"
        - name: "code"
          in: "path"
          description: "The SMS verification code."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/VerificationResult"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
      security:
        - api_key: []
        - bearer_token: []
  /otp/*:
    get:
      tags:
        - "otp"
      description: "Forwards any GET request to OTP. Refer to <a href='http://otp-docs.ibi-transit.com/api/index.html'>OTP's\
        \ API documentation</a> for OTP's supported API resources."
      produces:
        - "application/json"
        - "application/xml"
      parameters: []
      responses:
        "200":
          description: "successful operation"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
  /pelias/*:
    get:
      tags:
        - "pelias"
      description: "Forwards any GET request to Pelias Geocoder. Refer to <a href='https://github.com/pelias/documentation/#endpoint-descriptions'>Pelias\
        \ Geocoder Documentation</a> for API resources supported by Pelias Geocoder."
      produces:
        - "application/json"
      parameters: []
      security:
        - api_key: []
      responses:
        "200":
          description: "successful operation"
        "400":
          $ref: "#/responses/400"
        "401":
          $ref: "#/responses/401"
        "403":
          $ref: "#/responses/403"
        "404":
          $ref: "#/responses/404"
        "500":
          $ref: "#/responses/500"
        default:
          $ref: "#/responses/default"
definitions:
  AbstractUser:
    type: "object"
    required:
      - "auth0UserId"
      - "email"
    properties:
      email:
        type: "string"
        description: "Email address for contact. This must be unique in the collection."
      auth0UserId:
        type: "string"
        description: "Auth0 user name."
      isDataToolsUser:
        type: "boolean"
        description: "Determines whether this user has access to OTP Data Tools."
    description: "An abstract user."
  Currency:
    type: "object"
    properties:
      symbol:
        type: "string"
      currency:
        type: "string"
      defaultFractionDigits:
        type: "integer"
        format: "int32"
      currencyCode:
        type: "string"
  EncodedPolyline:
    type: "object"
    properties:
      points:
        type: "string"
      levels:
        type: "string"
      length:
        type: "integer"
        format: "int32"
  Fare:
    type: "object"
    properties:
      regular:
        $ref: "#/definitions/Price"
      student:
        $ref: "#/definitions/Price"
      senior:
        $ref: "#/definitions/Price"
      tram:
        $ref: "#/definitions/Price"
      special:
        $ref: "#/definitions/Price"
      youth:
        $ref: "#/definitions/Price"
  FareComponent:
    type: "object"
    properties:
      fareId:
        type: "string"
      price:
        $ref: "#/definitions/Price"
      routes:
        type: "array"
        items:
          type: "string"
  FareDetails:
    type: "object"
    properties:
      regular:
        type: "array"
        items:
          $ref: "#/definitions/FareComponent"
      student:
        type: "array"
        items:
          $ref: "#/definitions/FareComponent"
      senior:
        type: "array"
        items:
          $ref: "#/definitions/FareComponent"
      tram:
        type: "array"
        items:
          $ref: "#/definitions/FareComponent"
      special:
        type: "array"
        items:
          $ref: "#/definitions/FareComponent"
      youth:
        type: "array"
        items:
          $ref: "#/definitions/FareComponent"
  FareWrapper:
    type: "object"
    properties:
      fare:
        $ref: "#/definitions/Fare"
      details:
        $ref: "#/definitions/FareDetails"
  Itinerary:
    type: "object"
    properties:
      duration:
        type: "integer"
        format: "int64"
      startTime:
        type: "string"
        format: "date"
      endTime:
        type: "string"
        format: "date"
      walkTime:
        type: "integer"
        format: "int64"
      transitTime:
        type: "integer"
        format: "int64"
      waitingTime:
        type: "integer"
        format: "int64"
      walkDistance:
        type: "number"
        format: "double"
      walkLimitExceeded:
        type: "boolean"
      elevationLost:
        type: "number"
        format: "double"
      elevationGained:
        type: "number"
        format: "double"
      transfers:
        type: "integer"
        format: "int32"
      fare:
        $ref: "#/definitions/FareWrapper"
      legs:
        type: "array"
        items:
          $ref: "#/definitions/Leg"
  Job:
    type: "object"
    properties:
      status:
        type: "string"
      type:
        type: "string"
      createdAt:
        type: "string"
        format: "date"
      id:
        type: "string"
  Leg:
    type: "object"
    properties:
      startTime:
        type: "string"
        format: "date"
      endTime:
        type: "string"
        format: "date"
      departureDelay:
        type: "integer"
        format: "int32"
      arrivalDelay:
        type: "integer"
        format: "int32"
      realTime:
        type: "boolean"
      distance:
        type: "number"
        format: "double"
      pathway:
        type: "boolean"
      mode:
        type: "string"
      route:
        type: "string"
      interlineWithPreviousLeg:
        type: "boolean"
      from:
        $ref: "#/definitions/Place"
      to:
        $ref: "#/definitions/Place"
      legGeometry:
        $ref: "#/definitions/EncodedPolyline"
      rentedBike:
        type: "boolean"
      rentedCar:
        type: "boolean"
      rentedVehicle:
        type: "boolean"
      hailedCar:
        type: "boolean"
      transitLeg:
        type: "boolean"
      duration:
        type: "number"
        format: "double"
      intermediateStops:
        type: "array"
        items:
          $ref: "#/definitions/Place"
      steps:
        type: "array"
        items:
          $ref: "#/definitions/Step"
      agencyName:
        type: "string"
      agencyUrl:
        type: "string"
      routeType:
        type: "integer"
        format: "int32"
      routeId:
        type: "string"
      agencyId:
        type: "string"
      tripId:
        type: "string"
      serviceDate:
        type: "string"
      interStopGeometry:
        type: "array"
        items:
          $ref: "#/definitions/EncodedPolyline"
      routeShortName:
        type: "string"
      routeLongName:
        type: "string"
      alerts:
        type: "array"
        items:
          $ref: "#/definitions/LocalizedAlert"
  LocalizedAlert:
    type: "object"
    properties:
      alertHeaderText:
        type: "string"
      alertDescriptionText:
        type: "string"
      alertUrl:
        type: "string"
      effectiveStartDate:
        type: "string"
        format: "date"
  MonitoredTrip:
    type: "object"
    properties:
      userId:
        type: "string"
      tripName:
        type: "string"
      tripTime:
        type: "string"
      from:
        $ref: "#/definitions/Place"
      to:
        $ref: "#/definitions/Place"
      leadTimeInMinutes:
        type: "integer"
        format: "int32"
      monday:
        type: "boolean"
      tuesday:
        type: "boolean"
      wednesday:
        type: "boolean"
      thursday:
        type: "boolean"
      friday:
        type: "boolean"
      saturday:
        type: "boolean"
      sunday:
        type: "boolean"
      excludeFederalHolidays:
        type: "boolean"
      isActive:
        type: "boolean"
      queryParams:
        type: "string"
      itinerary:
        $ref: "#/definitions/Itinerary"
      notifyOnAlert:
        type: "boolean"
      departureVarianceMinutesThreshold:
        type: "integer"
        format: "int32"
      arrivalVarianceMinutesThreshold:
        type: "integer"
        format: "int32"
      notifyOnItineraryChange:
        type: "boolean"
  OtpUser:
    allOf:
      - $ref: "#/definitions/AbstractUser"
      - type: "object"
        properties:
          hasConsentedToTerms:
            type: "boolean"
          isPhoneNumberVerified:
            type: "boolean"
          notificationChannel:
            type: "string"
          phoneNumber:
            type: "string"
          savedLocations:
            type: "array"
            items:
              $ref: "#/definitions/UserLocation"
          storeTripHistory:
            type: "boolean"
          applicationId:
            type: "string"
  Place:
    type: "object"
    properties:
      name:
        type: "string"
      lon:
        type: "number"
        format: "double"
      lat:
        type: "number"
        format: "double"
      departure:
        type: "string"
        format: "date"
      orig:
        type: "string"
      vertexType:
        type: "string"
      stopId:
        type: "string"
      arrival:
        type: "string"
        format: "date"
      stopIndex:
        type: "integer"
        format: "int32"
      stopSequence:
        type: "integer"
        format: "int32"
      stopCode:
        type: "string"
      platformCode:
        type: "string"
      zoneId:
        type: "string"
      bikeShareId:
        type: "string"
      networks:
        type: "array"
        items:
          type: "string"
      address:
        type: "string"
  Price:
    type: "object"
    properties:
      currency:
        $ref: "#/definitions/Currency"
      cents:
        type: "integer"
        format: "int32"
  Step:
    type: "object"
    properties:
      distance:
        type: "number"
        format: "double"
      relativeDirection:
        type: "string"
      streetName:
        type: "string"
      absoluteDirection:
        type: "string"
      stayOn:
        type: "boolean"
      area:
        type: "boolean"
      bogusName:
        type: "boolean"
      lon:
        type: "number"
        format: "double"
      lat:
        type: "number"
        format: "double"
  TripRequest:
    type: "object"
    properties:
      userId:
        type: "string"
      batchId:
        type: "string"
      fromPlace:
        type: "string"
      toPlace:
        type: "string"
      queryParams:
        type: "string"
  UserLocation:
    type: "object"
    properties:
      address:
        type: "string"
      icon:
        type: "string"
      lat:
        type: "number"
        format: "double"
      lon:
        type: "number"
        format: "double"
      name:
        type: "string"
      type:
        type: "string"
  VerificationResult:
    type: "object"
    properties:
      sid:
        type: "string"
      status:
        type: "string"
      valid:
        type: "boolean"
externalDocs:
  description: ""
  url: ""
securityDefinitions:
  api_key:
    description: "API key header authentication."
    in: "header"
    name: "x-api-key"
    type: "apiKey"
  bearer_token:
    description: "Bearer token authentication using Auth0."
    in: "header"
    name: "Authorization"
    type: "apiKey"
responses:
  "400":
    description: "The request was not formed properly (e.g., some required parameters\
      \ may be missing). See the details of the returned response to determine the\
      \ exact issue."
  "401":
    description: "The server was not able to authenticate the request. This can happen\
      \ if authentication headers are missing or malformed, or the authentication\
      \ server cannot be reached."
  "403":
    description: "The requesting user is not allowed to perform the request."
  "404":
    description: "The requested item was not found."
  "500":
    description: "An error occurred while performing the request. Contact an API administrator\
      \ for more information."
  default:
    description: "An unexpected error occurred."
