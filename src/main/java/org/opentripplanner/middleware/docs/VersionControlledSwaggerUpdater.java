package org.opentripplanner.middleware.docs;

import org.opentripplanner.middleware.OtpMiddlewareMain;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

import static org.opentripplanner.middleware.docs.PublicApiDocGenerator.getSwaggerDocsAsString;

/**
 * This class is solely intended to be executed on a development machine
 * to update the version-controlled spark-swagger output at {@link #LATEST_SWAGGER_FILE}.
 */
public class VersionControlledSwaggerUpdater {
    public static final String LATEST_SWAGGER_FILE = "src/main/resources/latest-spark-swagger-output.yaml";

    private static final Logger LOG = LoggerFactory.getLogger(VersionControlledSwaggerUpdater.class);

    public static void main(String[] args) throws IOException, InterruptedException {
        // Running OtpMiddlewareMain.main is necessary to fully initialize the HTTP endpoints
        // (i.e. loading configuration and persistence) and serve the document auto-generated by spark-swagger.
        // We run OtpMiddlewareMain.main in a "test environment" however, to avoid loading Bugsnag.
        OtpMiddlewareMain.inTestEnvironment = true;
        OtpMiddlewareMain.main(new String[0]);

        updateSwaggerDocs();

        // Terminate the main thread.
        System.exit(0);
    }

    /**
     * Updates the version-controlled Swagger document located at {@link #LATEST_SWAGGER_FILE},
     * which is used by {@Link SwaggerTest} for detecting undocumented changes to the API endpoints.
     */
    public static void updateSwaggerDocs() throws IOException {
        String autoGeneratedSwagger = getSwaggerDocsAsString();
        Path versionControlledSwaggerFile = new File(LATEST_SWAGGER_FILE).toPath();
        Files.writeString(versionControlledSwaggerFile, autoGeneratedSwagger);

        LOG.info("The version-controlled swagger document has been updated.");
    }
}
