package org.opentripplanner.middleware.docs;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.opentripplanner.middleware.OtpMiddlewareTest;
import org.opentripplanner.middleware.utils.YamlUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.nio.file.Files;
import java.nio.file.Path;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * Contains test to verify that the swagger docs are generated correctly.
 */
public class SwaggerTest extends OtpMiddlewareTest {
    private static final Logger LOG = LoggerFactory.getLogger(SwaggerTest.class);
    private static final HttpClient client = HttpClient.newBuilder().build();
    private static final Path versionControlledSwaggerFile = new File("src/main/resources/doc.yaml").toPath();
    private static final File apiGatewayTemplateFile = new File("src/main/resources/api-gateway-template.yaml");

    /**
     * Run this test to update the Swagger docs file located at {@link #versionControlledSwaggerFile}. This is disabled
     * because it serves as a utility for keeping the docs file up-to-date.
     */
    @Test @Disabled
    public void updateSwaggerDocs() throws IOException, InterruptedException {
        String autoGeneratedSwagger = getSwaggerDocsAsString();
        Files.writeString(versionControlledSwaggerFile, autoGeneratedSwagger);
    }

    /**
     * Generate enhanced Swagger docs for use with AWS API Gateway. This handles things like adding auth headers and key
     * parameters used with API Gateway as well as injecting info needed to make CORS work.
     */
    @Test
    public void generateApiGatewaySwagger() throws IOException, InterruptedException {
        String autoGeneratedSwagger = getSwaggerDocsAsString();
        // Modify YAML to contain swagger info that is necessary for providing the API via AWS API Gateway.
        ObjectNode autoGeneratedSwaggerJson =  YamlUtils.yamlMapper.readTree(autoGeneratedSwagger).deepCopy();
        // TODO: Add various info to api-gateway file perhaps from an api-base.yml type file.
        JsonNode apiGatewayTemplateJson = YamlUtils.yamlMapper.readTree(apiGatewayTemplateFile);
        autoGeneratedSwaggerJson.set("components", apiGatewayTemplateJson.get("components"));
        Path outputPath = new File("target/doc-api-gateway.yaml").toPath();
        String yamlOutput = YamlUtils.yamlMapper.writer().writeValueAsString(autoGeneratedSwaggerJson);
        Files.writeString(outputPath, yamlOutput);
        LOG.info("Wrote API Gateway enhanced Swagger docs to: {}", outputPath);
    }

    /**
     * Verify that version-controlled doc.yaml file is up to date with the latest changes to swagger file auto-generated
     * from the spark-swagger library (available at {@link #getSwaggerDocs()}.
     */
    @Test
    public void swaggerDocsAreUpToDate() throws IOException, InterruptedException {
        HttpResponse<String> swaggerResponse = getSwaggerDocs();
        assertEquals(swaggerResponse.statusCode(), 200);
        String autoGeneratedSwagger = swaggerResponse.body();
        JsonNode swaggerJson = YamlUtils.yamlMapper.readTree(autoGeneratedSwagger);
        String title = swaggerJson.get("info").get("title").asText();
        LOG.info("Found swagger docs title: {}", title);
        assertEquals(title, "OTP Middleware");
        String versionControlledSwagger = Files.readString(versionControlledSwaggerFile);
        assertEquals(autoGeneratedSwagger, versionControlledSwagger);
    }

    /** Convenience method to get swagger docs as string. */
    private static String getSwaggerDocsAsString() throws IOException, InterruptedException {
        return getSwaggerDocs().body();
    }

    /**
     * Get swagger docs from the endpoint provided by spark-swagger. Note: this location can be modified by updating the
     * spark-swagger.conf options.
     */
    private static HttpResponse<String> getSwaggerDocs() throws IOException, InterruptedException {
        HttpRequest get = HttpRequest.newBuilder()
            .uri(URI.create("http://localhost:4567/doc.yaml"))
            .GET()
            .build();
        return client.send(get, HttpResponse.BodyHandlers.ofString());
    }
}
