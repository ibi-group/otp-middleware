{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "otp-middleware",
    "license": {
      "name": "MIT"
    }
  },
  "components": {
    "parameters": {
      "AWSAuthHeaderRequired": {
        "deprecated": true,
        "description": "Use the proper authorization manager instead of passing this individual header.",
        "name": "Authorization",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "IDParameter": {
        "name": "id",
        "in": "path",
        "description": "The ID of the entity to search.",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "401Unauthorized": {
        "description": "API key or token is missing or could not be validated.",
        "headers": {
          "WWW_Authenticate": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "AllowCORS": {
        "description": "Success",
        "headers": {
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Methods": {
            "schema": {
              "type": "string"
            }
          },
          "Access-Control-Allow-Headers": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "AdminUser": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdminUser"
            }
          }
        },
        "headers": {
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "ApiUser": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiUser"
            }
          }
        },
        "headers": {
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "OtpUser": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OtpUser"
            }
          }
        },
        "headers": {
          "Access-Control-Allow-Origin": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "requestBodies": {
      "AdminUser": {
        "description": "The AdminUser entity to add or update.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdminUser"
            }
          }
        }
      },
      "ApiUser": {
        "description": "The ApiUser entity to add or update.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiUser"
            }
          }
        }
      },
      "OtpUser": {
        "description": "The OtpUser entity to add or update.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OtpUser"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Auth0Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "EventSummary": {
        "description": "Summary information for events logged in Bugsnag. For additional information: https://bugsnagapiv2.docs.apiary.io/#reference/organizations/event-data-requests/create-an-event-data-requestData structure for log response. The data is based on https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/AmazonWebServiceResult.html, with items having the fields outlined in https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/apigateway/model/GetUsageResult.html.",
        "type": "object",
        "properties": {
          "errorId": {
            "type": "string",
            "description": "The error which this event is associated with."
          },
          "exceptions": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "A list of EventException classes and messages associated with this event."
          },
          "received": {
            "type": "string",
            "description": "The date/time Bugsnag received the event."
          },
          "projectId": {
            "type": "string",
            "description": "The project which this event is associated with."
          },
          "projectName": {
            "type": "string",
            "description": "The associated project name."
          },
          "releaseState": {
            "type": "string",
            "description": "Associated environment e.g. Test, Dev, Production."
          },
          "htmlUrl": {
            "type": "string",
            "description": "The dashboard URL for the project."
          }
        }
      },
      "AbstractUser": {
        "description": "An abstract user.",
        "type": "object",
        "required": [
          "email",
          "auth0UserId"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address for contact. This must be unique in the collection."
          },
          "auth0UserId": {
            "type": "string",
            "description": "Auth0 user name."
          },
          "isDataToolsUser": {
            "type": "boolean",
            "description": "Determines whether this user has access to OTP Data Tools."
          }
        }
      },
      "AdminUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUser"
          }
        ]
      },
      "ApiUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUser"
          },
          {
            "type": "object",
            "properties": {
              "apiKeyIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Holds the API keys assigned to the user."
              },
              "appName": {
                "type": "string",
                "description": "The name of the application built by this user."
              },
              "appPurpose": {
                "type": "string",
                "description": "The purpose of the application built by this user."
              },
              "appUrl": {
                "type": "string",
                "description": "The URL of the application built by this user."
              },
              "company": {
                "type": "string",
                "description": "The company or organization that this user belongs to."
              },
              "hasConsentedToTerms": {
                "type": "boolean",
                "description": "Whether the user has consented to the terms of use."
              },
              "name": {
                "type": "string",
                "description": "The name of this user."
              }
            }
          }
        ]
      },
      "OtpUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUser"
          },
          {
            "type": "object",
            "properties": {
              "hasConsentedToTerms": {
                "type": "boolean",
                "description": "Whether the user has consented to the terms of use."
              },
              "isPhoneNumberVerified": {
                "type": "boolean",
                "description": "Whether the user's phone number has been verified (to be implemented)"
              },
              "notificationChannel": {
                "type": "string",
                "description": "Notification preferences for this user (\"email\", \"sms\", \"none\")."
              },
              "phoneNumber": {
                "type": "string",
                "description": "Phone number for SMS notifications."
              },
              "savedLocations": {
                "type": "object",
                "description": "Locations that the user has saved."
              },
              "storeTripHistory": {
                "type": "boolean",
                "description": "Whether to store the user's trip history (user must opt in)."
              }
            }
          }
        ]
      },
      "LogResult": {
        "description": "Data structure for log response. The data is based on https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/AmazonWebServiceResult.html, with items having the fields outlined in https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/apigateway/model/GetUsageResult.html.",
        "type": "object"
      }
    }
  },
  "tags": [
    {
      "name": "api/admin/user",
      "description": "Interface for managing admin dashboard users (admin access only)."
    },
    {
      "name": "api/secure/application",
      "description": "Interface for managing API users (the application developers)."
    },
    {
      "name": "api/secure/logs",
      "description": "Interface for retrieving logs."
    },
    {
      "name": "api/secure/user",
      "description": "Interface for managing OTP users (the general public)."
    }
  ],
  "paths": {
    "/api/admin/user": {
      "get": {
        "tags": [
          "api/admin/user"
        ],
        "description": "Gets a list of all AdminUser entities.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUser"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/admin/user"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "api/admin/user"
        ],
        "description": "Creates a new AdminUser entity.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AdminUser"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AdminUser"
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user",
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "401": {
              "statusCode": "401",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "5\\d{2}": {
              "statusCode": "500",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      }
    },
    "/api/admin/user/fromtoken": {
      "get": {
        "tags": [
          "api/admin/user"
        ],
        "description": "Retrieve a user from the Auth0 token.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AdminUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user/fromtoken",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/admin/user"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user/fromtoken",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    },
    "/api/admin/user/{id}": {
      "get": {
        "tags": [
          "api/admin/user"
        ],
        "description": "Returns an AdminUser entity with the specified id, or 404 if not found.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AdminUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "api/admin/user"
        ],
        "description": "Updates and returns the AdminUser entity with the specified id, or 404 if not found.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AdminUser"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AdminUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "api/admin/user"
        ],
        "description": "Deletes the AdminUser entity with the specified id if it exists.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "400 response"
          },
          "401": {
            "description": "401 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user/{id}",
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "400": {
              "statusCode": "400"
            },
            "401": {
              "statusCode": "401"
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "api/admin/user"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/user/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    },
    "/api/secure/application": {
      "get": {
        "tags": [
          "api/secure/application"
        ],
        "description": "Gets a list of all ApiUser entities.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiUser"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/secure/application"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "api/secure/application"
        ],
        "description": "Creates a new ApiUser entity.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ApiUser"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUser"
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application",
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "401": {
              "statusCode": "401",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "5\\d{2}": {
              "statusCode": "500",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      }
    },
    "/api/secure/application/fromtoken": {
      "get": {
        "tags": [
          "api/secure/application"
        ],
        "description": "Retrieve a user from the Auth0 token.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application/fromtoken",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/secure/application"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application/fromtoken",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    },
    "/api/secure/application/{id}": {
      "get": {
        "tags": [
          "api/secure/application"
        ],
        "description": "Returns an ApiUser entity with the specified id, or 404 if not found.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "api/secure/application"
        ],
        "description": "Updates and returns the ApiUser entity with the specified id, or 404 if not found.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ApiUser"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApiUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "api/secure/application"
        ],
        "description": "Deletes the ApiUser entity with the specified id if it exists.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "400 response"
          },
          "401": {
            "description": "401 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application/{id}",
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "400": {
              "statusCode": "400"
            },
            "401": {
              "statusCode": "401"
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "api/secure/application"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/application/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    },
    "/api/admin/bugsnag/eventsummary": {
      "get": {
        "tags": [
          "api/admin/bugsnag/eventsummary"
        ],
        "description": "Gets a list of recent Bugsnag events.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSummary"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/bugsnag/eventsummary",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/admin/bugsnag/eventsummary"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/admin/bugsnag/eventsummary",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    },
    "/api/secure/logs": {
      "get": {
        "tags": [
          "api/secure/logs"
        ],
        "description": "Gets a list of recent logs.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogResult"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/logs",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/secure/logs"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/logs",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    },
    "/api/secure/user": {
      "get": {
        "tags": [
          "api/secure/user"
        ],
        "description": "Gets a list of all OtpUser entities.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OtpUser"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/secure/user"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "api/secure/user"
        ],
        "description": "Creates a new OtpUser entity.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OtpUser"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OtpUser"
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user",
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "401": {
              "statusCode": "401",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "5\\d{2}": {
              "statusCode": "500",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      }
    },
    "/api/secure/user/fromtoken": {
      "get": {
        "tags": [
          "api/secure/user"
        ],
        "description": "Retrieve a user from the Auth0 token.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OtpUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user/fromtoken",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "tags": [
          "api/secure/user"
        ],
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user/fromtoken",
          "responses": {
            "default": {
              "statusCode": 200,
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    },
    "/api/secure/user/{id}": {
      "get": {
        "tags": [
          "api/secure/user"
        ],
        "description": "Returns an OtpUser entity with the specified id, or 404 if not found.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OtpUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "api/secure/user"
        ],
        "description": "Updates and returns the OtpUser entity with the specified id, or 404 if not found.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OtpUser"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OtpUser"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "api/secure/user"
        ],
        "description": "Deletes the OtpUser entity with the specified id if it exists.",
        "parameters": [
          {
            "$ref": "#/components/parameters/AWSAuthHeaderRequired"
          },
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "security": [
          {
            "ApiKey": [],
            "Auth0Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "400 response"
          },
          "401": {
            "description": "401 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user/{id}",
          "responses": {
            "200": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            },
            "400": {
              "statusCode": "400"
            },
            "401": {
              "statusCode": "401"
            }
          },
          "requestParameters": {
            "integration.request.header.Authorization": "method.request.header.Authorization",
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "api/secure/user"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/IDParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowCORS"
          }
        },
        "x-amazon-apigateway-integration": {
          "uri": "http://54.147.40.127/api/secure/user/{id}",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,OPTIONS,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "passthroughBehavior": "when_no_match",
          "httpMethod": "OPTIONS",
          "type": "http"
        }
      }
    }
  }
}
